{"version":3,"sources":["../src/parameters.ts"],"sourcesContent":["import { createToolParameters } from \"@goat-sdk/core\";\nimport { z } from \"zod\";\n\nexport class DepositVaultParameters extends createToolParameters(\n    z.object({\n        address: z.string().describe(\"The address of the vault\"),\n        assets: z.number().describe(\"The amount of tokens to deposit in base units\"),\n        receiver: z.string().describe(\"The address of the receiver of the deposit\"), \n    }),\n) {}\n\nexport class WithdrawVaultParameters extends createToolParameters(\n    z.object({\n        address: z.string().describe(\"The address of the vault\"),\n        assets: z.number().describe(\"The amount of tokens to withdraw in base units\"),\n        receiver: z.string().describe(\"The address of the receiver of the deposit\"), \n        owner: z.string().describe(\"The address of the owner of the deposit\"), \n    }),\n) {}\n\n\n\nexport class GetMaxSupplyParameters extends createToolParameters(\n    z.object({\n        vaultAddress: z.string().describe(\"The address of the vault\"),\n        address: z.string().describe(\"The address of the wallet\"),\n    }),\n) {}\n\nexport class GetPoolTotalSupplyParameters extends createToolParameters(\n    z.object({\n        address: z.string().describe(\"The address of the vault\"),\n    }),\n) {}\n\n\n\nexport class GetTokenInfoBySymbolParameters extends createToolParameters(\n    z.object({\n        symbol: z.string().describe(\"The symbol of the token to get the info of\"),\n    }),\n) {}\n\nexport class GetTokenBalanceParameters extends createToolParameters(\n    z.object({\n        wallet: z.string().describe(\"The address to get the balance of\"),\n        tokenAddress: z.string().describe(\"The address of the token to get the balance of\"),\n    }),\n) {}\n\nexport class TransferParameters extends createToolParameters(\n    z.object({\n        tokenAddress: z.string().describe(\"The address of the token to transfer\"),\n        to: z.string().describe(\"The address to transfer the token to\"),\n        amount: z.string().describe(\"The amount of tokens to transfer in base units\"),\n    }),\n) {}\n\nexport class GetTokenTotalSupplyParameters extends createToolParameters(\n    z.object({\n        tokenAddress: z.string().describe(\"The address of the token to get the total supply of\"),\n    }),\n) {}\n\nexport class GetTokenAllowanceParameters extends createToolParameters(\n    z.object({\n        tokenAddress: z.string().describe(\"The address of the token to check the allowance of\"),\n        owner: z.string().describe(\"The address to check the allowance of\"),\n        spender: z.string().describe(\"The address to check the allowance for\"),\n    }),\n) {}\n\nexport class ApproveParameters extends createToolParameters(\n    z.object({\n        tokenAddress: z.string().describe(\"The address of the token to approve\"),\n        spender: z.string().describe(\"The address to approve the allowance to\"),\n        amount: z.string().describe(\"The amount of tokens to approve in base units\"),\n    }),\n) {}\n\nexport class RevokeApprovalParameters extends createToolParameters(\n    z.object({\n        tokenAddress: z.string().describe(\"The address of the token to revoke\"),\n        spender: z.string().describe(\"The address to revoke the allowance to\"),\n    }),\n) {}\n\nexport class TransferFromParameters extends createToolParameters(\n    z.object({\n        tokenAddress: z.string().describe(\"The address of the token to transfer\"),\n        from: z.string().describe(\"The address to transfer the token from\"),\n        to: z.string().describe(\"The address to transfer the token to\"),\n        amount: z.string().describe(\"The amount of tokens to transfer in base units\"),\n    }),\n) {}\n\nexport class ConvertToBaseUnitParameters extends createToolParameters(\n    z.object({\n        amount: z.number().describe(\"The amount of tokens to convert from decimal units to base units\"),\n        decimals: z.number().describe(\"The number of decimals of the token\"),\n    }),\n) {}\n\nexport class ConvertFromBaseUnitParameters extends createToolParameters(\n    z.object({\n        amount: z.number().describe(\"The amount of tokens to convert from base units to decimal units\"),\n        decimals: z.number().describe(\"The number of decimals of the token\"),\n    }),\n) {}\n"],"mappings":"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","names":["createToolParameters","z","DepositVaultParameters","createToolParameters","z","object","address","string","describe","assets","number","receiver","WithdrawVaultParameters","owner","GetMaxSupplyParameters","vaultAddress","GetPoolTotalSupplyParameters","GetTokenInfoBySymbolParameters","symbol","GetTokenBalanceParameters","wallet","tokenAddress","TransferParameters","to","amount","GetTokenTotalSupplyParameters","GetTokenAllowanceParameters","spender","ApproveParameters","RevokeApprovalParameters","TransferFromParameters","from","ConvertToBaseUnitParameters","decimals","ConvertFromBaseUnitParameters"]}